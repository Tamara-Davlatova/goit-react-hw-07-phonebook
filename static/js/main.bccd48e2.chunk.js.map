{"version":3,"sources":["Components/ContactsList/ContactsItem/ContactsItem.module.css","Components/ContactsList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/Form/Form.js","Components/ContactsList/ContactsItem/ContactsItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSucsess","fetchContactsError","addContactsRequest","addContactsSucsess","addContactsError","deleteContactsRequest","deleteContactsSucsess","deleteContactsError","filterContacts","axios","defaults","baseURL","getAllContacts","state","contacts","items","getFilterValue","filter","getContactsLoading","loading","visibleContacts","createSelector","contact","name","toLocaleLowerCase","includes","getContactsName","map","toLowerCase","Form","contactsName","useSelector","dispatch","useDispatch","onSubmit","data","number","post","then","catch","error","useState","setName","setNumber","e","preventDefault","alert","className","s","form","label","type","value","onChange","currentTarget","input","btn","ContactsItem","id","onDelete","item","onClick","Contacts","isLoading","contactId","delete","deleteContact","onFetchContacts","get","useEffect","list","Filter","target","App","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bccd48e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__1oATJ\",\"btn\":\"ContactsItem_btn__3q6sE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1HUsI\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('todos/fetchContactsRequest');\nexport const fetchContactsSucsess = createAction('todos/fetchContactsSucsess');\nexport const fetchContactsError = createAction('todos/fetchContactsError');\n\nexport const addContactsRequest = createAction('todos/addContactsRequest');\nexport const addContactsSucsess = createAction('todos/addContactsSucsess');\nexport const addContactsError = createAction('todos/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'todos/deleteContactsRequest',\n);\nexport const deleteContactsSucsess = createAction(\n  'todos/deleteContactsSucsess',\n);\nexport const deleteContactsError = createAction('todos/deleteContactsError');\n\nexport const filterContacts = createAction('contacts/changeFilter');\n","import {\r\n  fetchContactsRequest,\r\n  fetchContactsSucsess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSucsess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSucsess,\r\n  deleteContactsError,\r\n} from './contacts-actions';\r\n\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4041';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSucsess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = data => dispatch => {\r\n  const contact = {\r\n    name: data.name,\r\n    number: data.number,\r\n  };\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSucsess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactsSucsess(contactId)))\r\n    .catch(error => dispatch(deleteContactsError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\nexport const getFilterValue = state => state.contacts.filter;\nexport const getContactsLoading = state => state.contacts.loading;\n\n// export const visibleContacts = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilterValue(state);\n//   return contacts.filter(contact =>\n//     contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n//   );\n// };\n\nexport const visibleContacts = createSelector(\n  [getAllContacts, getFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  },\n);\n\n// export const getContactsName = state => {\n//   const contacts = getAllContacts(state);\n//   return contacts.map(contact => contact.name.toLowerCase());\n// };\n\nexport const getContactsName = createSelector([getAllContacts], contacts => {\n  return contacts.map(contact => contact.name.toLowerCase());\n});\n","import s from './Form.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContactsName } from '../../redux/contacts/contacts-selectors';\n\nfunction Form() {\n  const contactsName = useSelector(getContactsName);\n\n  const dispatch = useDispatch();\n  const onSubmit = contact => dispatch(addContact(contact));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contactsName.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts!`);\n      setName('');\n      setNumber('');\n      return;\n    }\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          className={s.input}\n        ></input>\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n          className={s.input}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import s from './ContactsItem.module.css';\n\nexport default function ContactsItem({ id, name, number, onDelete }) {\n  return (\n    <li key={id} className={s.item}>\n      {name}: {number}\n      <button type=\"button\" className={s.btn} onClick={onDelete}>\n        delete\n      </button>\n    </li>\n  );\n}\n","import ContactsItem from './ContactsItem/ContactsItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  visibleContacts,\n  getContactsLoading,\n} from '../../redux/contacts/contacts-selectors';\nimport { useEffect } from 'react';\n\nfunction Contacts() {\n  const contacts = useSelector(visibleContacts);\n  const isLoading = useSelector(getContactsLoading);\n  const dispatch = useDispatch();\n  const onDelete = contactId => dispatch(deleteContact(contactId));\n\n  const onFetchContacts = () => dispatch(fetchContacts());\n\n  useEffect(() => {\n    onFetchContacts();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <h1>Загружаем...</h1>}\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactsItem\n            key={id}\n            name={name}\n            number={number}\n            onDelete={() => onDelete(id)}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Contacts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\n\nfunction Filter() {\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterContacts(e.target.value));\n\n  return (\n    <label>\n      Find contacts by Name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nexport default Filter;\n","import Form from './Components/Form/Form';\nimport Contacts from './Components/ContactsList/ContactsList';\nimport Filter from './Components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\n// import * as types from './contacts-types';\nimport { createReducer } from '@reduxjs/toolkit';\n// import * as actions from './contacts-actions';\nimport {\n  fetchContactsRequest,\n  fetchContactsSucsess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSucsess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSucsess,\n  deleteContactsError,\n  filterContacts,\n} from './contacts-actions';\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nconst items = createReducer([], {\n  [fetchContactsSucsess]: (_, { payload }) => payload,\n  [addContactsSucsess]: (state, { payload }) => [payload, ...state],\n  [deleteContactsSucsess]: (state, { payload }) =>\n    state.filter(({ id }) => payload !== id),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSucsess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSucsess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSucsess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\nimport { configureStore } from '@reduxjs/toolkit';\n// import storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\n// const persistContactsConfig = {\n//   key: 'contacts',\n//   storage: storage,\n//   blacklist: ['filter'],\n// };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\n// export const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2f0ax\",\"btn\":\"Form_btn__1NxPQ\",\"label\":\"Form_label__3JeZR\",\"input\":\"Form_input__3KzNY\"};"],"sourceRoot":""}